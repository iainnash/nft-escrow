/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TestErc721 } from "./TestErc721";

export class TestErc721Factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TestErc721> {
    return super.deploy(overrides || {}) as Promise<TestErc721>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TestErc721 {
    return super.attach(address) as TestErc721;
  }
  connect(signer: Signer): TestErc721Factory {
    return super.connect(signer) as TestErc721Factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestErc721 {
    return new Contract(address, _abi, signerOrProvider) as TestErc721;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600a8152695465737445524337323160b01b602080830191825283518085019094526004845263151154d560e21b90840152815191929162000060916000916200007f565b508051620000769060019060208401906200007f565b50505062000162565b8280546200008d9062000125565b90600052602060002090601f016020900481019282620000b15760008555620000fc565b82601f10620000cc57805160ff1916838001178555620000fc565b82800160010185558215620000fc579182015b82811115620000fc578251825591602001919060010190620000df565b506200010a9291506200010e565b5090565b5b808211156200010a57600081556001016200010f565b600181811c908216806200013a57607f821691505b602082108114156200015c57634e487b7160e01b600052602260045260246000fd5b50919050565b61139780620001726000396000f3fe608060405234801561001057600080fd5b50600436106100ba5760003560e01c806301ffc9a7146100bf57806306fdde03146100e7578063081812fc146100fc578063095ea7b31461012757806323b872dd1461013c57806340c10f191461014f57806342842e0e146101625780636352211e1461017557806370a082311461018857806395d89b41146101a9578063a22cb465146101b1578063b88d4fde146101c4578063c87b56dd146101d7578063e985e9c5146101ea575b600080fd5b6100d26100cd36600461108f565b6101fd565b60405190151581526020015b60405180910390f35b6100ef61024f565b6040516100de9190611177565b61010f61010a3660046110c7565b6102e1565b6040516001600160a01b0390911681526020016100de565b61013a610135366004611066565b61036e565b005b61013a61014a366004610f1c565b61047f565b61013a61015d366004611066565b6104b0565b61013a610170366004610f1c565b6104be565b61010f6101833660046110c7565b6104d9565b61019b610196366004610ed0565b610550565b6040519081526020016100de565b6100ef6105d7565b61013a6101bf36600461102c565b6105e6565b61013a6101d2366004610f57565b6106a7565b6100ef6101e53660046110c7565b6106df565b6100d26101f8366004610eea565b6107b7565b60006001600160e01b031982166380ac58cd60e01b148061022e57506001600160e01b03198216635b5e139f60e01b145b8061024957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461025e9061129c565b80601f016020809104026020016040519081016040528092919081815260200182805461028a9061129c565b80156102d75780601f106102ac576101008083540402835291602001916102d7565b820191906000526020600020905b8154815290600101906020018083116102ba57829003601f168201915b5050505050905090565b60006102ec826107e5565b6103525760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b6000610379826104d9565b9050806001600160a01b0316836001600160a01b031614156103e75760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610349565b336001600160a01b0382161480610403575061040381336107b7565b6104705760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b6064820152608401610349565b61047a8383610802565b505050565b6104893382610870565b6104a55760405162461bcd60e51b8152600401610349906111dc565b61047a83838361093a565b6104ba8282610ada565b5050565b61047a838383604051806020016040528060008152506106a7565b6000818152600260205260408120546001600160a01b0316806102495760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610349565b60006001600160a01b0382166105bb5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610349565b506001600160a01b031660009081526003602052604090205490565b60606001805461025e9061129c565b6001600160a01b03821633141561063b5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610349565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106b13383610870565b6106cd5760405162461bcd60e51b8152600401610349906111dc565b6106d984848484610af4565b50505050565b60606106ea826107e5565b61074e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610349565b600061076560408051602081019091526000815290565b9050600081511161078557604051806020016040528060008152506107b0565b8061078f84610b27565b6040516020016107a092919061110b565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610837826104d9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061087b826107e5565b6108dc5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610349565b60006108e7836104d9565b9050806001600160a01b0316846001600160a01b031614806109225750836001600160a01b0316610917846102e1565b6001600160a01b0316145b80610932575061093281856107b7565b949350505050565b826001600160a01b031661094d826104d9565b6001600160a01b0316146109b55760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610349565b6001600160a01b038216610a175760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610349565b610a22600082610802565b6001600160a01b0383166000908152600360205260408120805460019290610a4b908490611259565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a7990849061122d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6104ba828260405180602001604052806000815250610c41565b610aff84848461093a565b610b0b84848484610c74565b6106d95760405162461bcd60e51b81526004016103499061118a565b606081610b4b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b755780610b5f816112d7565b9150610b6e9050600a83611245565b9150610b4f565b60008167ffffffffffffffff811115610b9e57634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610bc8576020820181803683370190505b5090505b841561093257610bdd600183611259565b9150610bea600a866112f2565b610bf590603061122d565b60f81b818381518110610c1857634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c3a600a86611245565b9450610bcc565b610c4b8383610d81565b610c586000848484610c74565b61047a5760405162461bcd60e51b81526004016103499061118a565b60006001600160a01b0384163b15610d7657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610cb890339089908890889060040161113a565b602060405180830381600087803b158015610cd257600080fd5b505af1925050508015610d02575060408051601f3d908101601f19168201909252610cff918101906110ab565b60015b610d5c573d808015610d30576040519150601f19603f3d011682016040523d82523d6000602084013e610d35565b606091505b508051610d545760405162461bcd60e51b81526004016103499061118a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610932565b506001949350505050565b6001600160a01b038216610dd75760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610349565b610de0816107e5565b15610e2d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610349565b6001600160a01b0382166000908152600360205260408120805460019290610e5690849061122d565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114610ecb57600080fd5b919050565b600060208284031215610ee1578081fd5b6107b082610eb4565b60008060408385031215610efc578081fd5b610f0583610eb4565b9150610f1360208401610eb4565b90509250929050565b600080600060608486031215610f30578081fd5b610f3984610eb4565b9250610f4760208501610eb4565b9150604084013590509250925092565b60008060008060808587031215610f6c578081fd5b610f7585610eb4565b9350610f8360208601610eb4565b925060408501359150606085013567ffffffffffffffff80821115610fa6578283fd5b818701915087601f830112610fb9578283fd5b813581811115610fcb57610fcb611332565b604051601f8201601f19908116603f01168101908382118183101715610ff357610ff3611332565b816040528281528a602084870101111561100b578586fd5b82602086016020830137918201602001949094529598949750929550505050565b6000806040838503121561103e578182fd5b61104783610eb4565b91506020830135801515811461105b578182fd5b809150509250929050565b60008060408385031215611078578182fd5b61108183610eb4565b946020939093013593505050565b6000602082840312156110a0578081fd5b81356107b081611348565b6000602082840312156110bc578081fd5b81516107b081611348565b6000602082840312156110d8578081fd5b5035919050565b600081518084526110f7816020860160208601611270565b601f01601f19169290920160200192915050565b6000835161111d818460208801611270565b835190830190611131818360208801611270565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061116d908301846110df565b9695505050505050565b6020815260006107b060208301846110df565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561124057611240611306565b500190565b6000826112545761125461131c565b500490565b60008282101561126b5761126b611306565b500390565b60005b8381101561128b578181015183820152602001611273565b838111156106d95750506000910152565b600181811c908216806112b057607f821691505b602082108114156112d157634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156112eb576112eb611306565b5060010190565b6000826113015761130161131c565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461135e57600080fd5b5056fea26469706673582212200f3a97d7b12eea9649062b8ed60456bca4e9868f87771990c65b68937f8be0e764736f6c63430008040033";
